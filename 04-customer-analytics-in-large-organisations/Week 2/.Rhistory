expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names = list(Food = c("Chinese food", "Japanese food", "Fast food"),
type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60")),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
expand.grid(1:16, 1:16)
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
# Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
# Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
# Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60")
# Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60")
# Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(
attribute.names = list(Food = c("Chinese food", "Japanese food", "Fast food"),
Time = c("15 mins", '30 mins', '40 mins'),
Price = c("$20", "$30", "$40")),
nalternatives = 2, nblocks = 1, row.renames = FALSE, randomize = TRUE, seed = 987)
questionnaire(choice.experiment.design = des1)
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60")
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
des1
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60")
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
des1
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(
attribute.names = list(Food = c("Chinese food", "Japanese food", "Fast food"),
Time = c("15 mins", '30 mins', '40 mins'),
Price = c("$20", "$30", "$40")),
nalternatives = 2, nblocks = 1, row.renames = FALSE, randomize = TRUE, seed = 987)
questionnaire(choice.experiment.design = des1)
des1 <- rotation.design(
Type = c("dining-in", 'take-away', 'delivery'),
# Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
questionnaire(choice.experiment.design = des1)
)
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names =list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
rm(list=ls())
gc()
des1 <- rotation.design(
des1 <- rotation.design(
attribute.names = list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive"))
nalternatives = 2, nblocks = 1, row.renames = FALSE, randomize = TRUE, seed = 987)
des1 <- rotation.design(
attribute.names = list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive"),
nalternatives = 2, nblocks = 1, row.renames = FALSE, randomize = TRUE, seed = 987)
),
nalternatives = 2, nblocks = 1, row.renames = FALSE, randomize = TRUE, seed = 987)
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names = list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
Type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60"),
Distance = c('within walking distance', "requiring a long drive", "requiring a short drive")
),
nalternatives = 2, nblocks = 1, row.renames = FALSE, randomize = TRUE, seed = 987)
questionnaire(choice.experiment.design = des1)
data("syn.res1")
syn.res1[1:3, ]
desmat1 <- make.design.matrix(choice.experiment.design = des1,
optout = TRUE, categorical.attributes = c("Food", "Type", "Distance", "Price"))
desmat1[1:3, ]
dataset1 <- make.dataset(respondent.dataset = syn.res1,
choice.indicators = c("q1", "q2", "q3", "q4", "q5", "q6", "q7", "q8", "q9"),
design.matrix = desmat1)
dataset1[1:10, ]
library(survival)
clogout1 <- clogit(RES ~ ASC + Reg_B + Reg_C + More + Most + More:F + Most:F + Price + strata(STR),
data = dataset1)
clogout1
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names = list(Food = c("Chinese food", "Japanese food", "Fast food"),
type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60")),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
des1 <- rotation.design(attribute.names = list(Food = c("Asian cuisine", "European cuisine", "American cuisine", "African-Middle Eastern cuisine"),
type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60")),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
des1 <- rotation.design(attribute.names = list(Food = c("Asian cuisine", "European cuisine", "African-Middle Eastern cuisine"),
type = c("dining-in", 'take-away', 'delivery'),
Price = c("$20", "$40", "$60")),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
des1 <- rotation.design(attribute.names = list(Food = c("Asian cuisine", "European cuisine", "African-Middle Eastern cuisine", "American cuisine"),
type = c("dining-in", 'take-away', 'delivery', "pick-up"),
Price = c("$20", "$40", "$60")),
nalternatives = 2, nblocks = 1)
des1 <- rotation.design(attribute.names = list(Food = c("Asian cuisine", "European cuisine", "African-Middle Eastern cuisine", "American cuisine"),
type = c("dining-in", 'take-away', 'delivery', "pick-up"),
Price = c("$20", "$40", "$60")),
nalternatives = 1, nblocks = 1)
des1 <- rotation.design(attribute.names = list(Food = c("Asian cuisine", "European cuisine", "African-Middle Eastern cuisine", "American cuisine"),
type = c("dining-in", 'take-away', 'delivery', "pick-up"),
Price = c("$20", "$40", "$60")),
nalternatives = 2, nblocks = 1)
des1
questionnaire(choice.experiment.design = des1)
des1 <- rotation.design(attribute.names = list(Food = c("Asian cuisine", "European cuisine", "African-Middle Eastern cuisine", "American cuisine"),
type = c("dining-in", 'take-away', 'delivery', "pick-up"),
Price = c("$20", "$40", "$60")),
nalternatives = 2, nblocks = 1, row.renames = FALSE, randomize = TRUE, seed = 987)
questionnaire(choice.experiment.design = des1)
data("syn.res1")
syn.res1[1:3, ]
desmat1 <- make.design.matrix(choice.experiment.design = des1,
optout = TRUE, categorical.attributes = c("Food", "type", "Price"))
desmat1[1:3, ]
dataset1 <- make.dataset(respondent.dataset = syn.res1,
choice.indicators = c("q1", "q2", "q3", "q4", "q5", "q6", "q7", "q8", "q9"),
design.matrix = desmat1)
dataset1[1:10, ]
library(survival)
clogout1 <- clogit(RES ~ ASC + Reg_B + Reg_C + More + Most + More:F + Most:F + Price + strata(STR),
data = dataset1)
clogout1
gofm(clogout1)
expand.grid(1:16, 1:16)
factorial(16)/(factorial(14) * factorial(2))
choose(16, 2)
t(combn(1:16, 2))
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names = list(Region = c("Reg_A", "Reg_B", "Reg_C"),
Eco = c("Conv.", "More", "Most"),
Price = c("1", "1.1", "1.2")),
nalternatives = 2, nblocks = 1)
des1
library(AlgDesign)
# 1. Prepare a full-factorial design for your factors and levels.
ffd <- gen.factorial(c(3,3,3), varNames = c("Region", "Eco", "Price"), factors = "all")
# 2. Extract 8 questions from the full-factorial design.
# There can be any number you need.
alt_des <- optFederov(~., ffd, 8)$design
# 3. Use the same function as before but with an extra parameter of the
# given design prepared on step 2.
des2 <- rotation.design(candidate.array = alt_des,
attribute.names = list(Region = c("Reg_A", "Reg_B", "Reg_C"),
Eco = c("Conv.", "More", "Most"),
Price = c("1", "1.1", "1.2")),
nalternatives = 2, nblocks = 1)
des2
questionnaire(choice.experiment.design = des1)
questionnaire(choice.experiment.design = des2)
rm(list=ls())
gc()
library(support.CEs)
des1 <- rotation.design(attribute.names = list(Region = c("Reg_A", "Reg_B", "Reg_C"),
Eco = c("Conv.", "More", "Most"),
Price = c("1", "1.1", "1.2")),
nalternatives = 2, nblocks = 1, row.renames = FALSE, randomize = TRUE, seed = 987)
questionnaire(choice.experiment.design = des1)
data("syn.res1")
syn.res1[1:3, ]
desmat1 <- make.design.matrix(choice.experiment.design = des1,
optout = TRUE, categorical.attributes = c("Region", "Eco"),
continuous.attributes = c("Price"), unlabeled = TRUE)
desmat1[1:3, ]
dataset1 <- make.dataset(respondent.dataset = syn.res1,
choice.indicators = c("q1", "q2", "q3", "q4", "q5", "q6", "q7", "q8", "q9"),
design.matrix = desmat1)
dataset1[1:10, ]
library(survival)
clogout1 <- clogit(RES ~ ASC + Reg_B + Reg_C + More + Most + More:F + Most:F + Price + strata(STR),
data = dataset1)
clogout1
gofm(clogout1)
# Calculating the marginal willingness to pay
mwtp(output = clogout1, monetary.variables = c("Price"),
nonmonetary.variables = c("Reg_B", "Reg_C", "More", "Most", "More:F", "Most:F"),
confidence.level = 0.90, seed = 987)
